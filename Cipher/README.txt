Cipher:
This code sample takes a string as an input and gives an encrypted output. There are 2 stages of encryption and the output at each stage is displayed. The decryption of the final output is also done and the output of each stage of decryption is also displayed in the reverse order.

Code File:
This folder contains the sample code and has 1 code file written in java with the name:
-Own.java

In the first stage of encryption, which is a custom Substitution Cipher, an input string is given. The alphabet is substituted by a value using the formula y = 3x+2, where x is a character in the input string (considering a=0, b=1… z=25) and y is its encrypted value. We subtract the ASCII value of the character by the ASCII value of the first element in the range of characters (in this case ‘a’), so that we get the values a=0, b=1… z=0 to correctly use the formula. We add the value back again after implementing the formula. The modulus ensures that the Substitution is cyclic. Since I only used lower case alphabets, the range of ASCII values is 97-122 and so the modulus is 26. To include all characters, we simply have to increase the range to 32-126 and make the modulus 95.
In the second stage of encryption, which is a custom Columnar Transposition, an input integer is given. This is the number of columns. Using this and the length of the string, we find the number of rows. We create a matrix using the rows and columns and start filling it from left to right, top to bottom with the elements of the string. In case the matrix is not completely filled, at the end of the string, we break out of the loop, which leaves the empty positions as null. Now while encrypting, the matrix is read in a top to bottom fashion, first reading all the even columns and the reading all the odd columns in a left to right manner.
To reverse the process, we first reverse the Columnar Transposition. We create a matrix with the previously found out number of rows and columns. We fill the matrix with an arbitrary character which we will replace with characters in the string. In the loop starting with row 1 and column 2 we replace the characters in the matrix from top to bottom, skipping positions that do not contain the character. We increment the column value by 2 at the end of every row, filling out the even columns first. At the end of the even columns, we start filling the odd columns. After this, the matrix is read normally in a left to right, top to bottom manner to give to decrypted string. To decrypt the Substitution Cipher, we use the direct reversal of the encryption algorithm, using the formula x = (y-2)/3, where y is a character in the encrypted string and x is the decrypted value.
Hence, the code shows the step by step process of encryption and decryption of an input string using a custom made cipher.

Output Image:
This folder contains the image file showcasing the output the code file generates and contains the following image:
-Input and Output.png

This code was tested with 3 sample inputs. 
Considering the first input ‘abcde’ (as seen in the ‘Input and Output.png’), the result of the first stage of encryption is ‘cfilo’ for example, three times the value of ‘b’ (1) is 3 and when we add 2 it becomes 5, which is ‘f’. Hence, we can determine the encrypted value of each element in the string. 
In the second stage, the number of columns entered is 3, therefore we enter it into a matrix with 2 rows and 3 columns, with the rows being [c, f, i] and [l, o, null]. Reading the even columns first in a top to bottom manner, we get ‘fo’. After reading the odd columns, we get ‘focli’. 
To decrypt this, we take a matrix with 2 rows and 3 columns and fill it up till the length of the string with an arbitrary character (consider it to be ‘1’). The matrix becomes [1, 1, 1] and [1, 1, null]. We replace the elements of matrix top to bottom, even columns first if the value is ‘1’ (or simply not a null value). So we get [1, f, 1] and [1, o, null]. Then we replace the odd columns in a similar manner, getting [c, f, i] and [l, o, null]. We read the matrix in left to right, top to bottom manner and we get the string ‘cfilo’. Finally, decrypting the substitution cipher, we directly reverse the formula. Considering ‘i’ (8), we first subtract 2 getting 6 and then we divide by 3, making it 2, which is ‘c’. Similarly, applying this to all elements in the string, w
